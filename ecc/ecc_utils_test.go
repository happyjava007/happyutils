package ecc

import "testing"

const pubKey = "39313530363230343533343537383837313634373432313138393935393038353436313733303237343239313233373130393138383830313037393530353033363436383933393837303330362c3539383434393935363234353138393433353432383333383437333735333330383733313832303834393636353539333132333833373135333732383136363732363631313837383737373335"
const priKey = "3077020101042043474898e385c353f38eba8100f03872ce4975108e54cfa50f77374f44ea7a47a00a06082a8648ce3d030107a14403420004ca4ead26db72383896c49a25648f56c0ffccc3f952ef9e0d5ae1cc58a0435062844f1132955180505c4b0e5bf7810462fdae3cd62cddb493f8309c65c1105b67"
const content = "Happyjava not only java"
const signature = "38393537393132313830303932363934343135343333373635343635323234383236303332383538313737353434313238373136373839343234333136373335303538393231393939343332342c313036373735363633373033333932333532363836323632383632323636343639383737373937383731313931393931303430363739333932373737333530383331343735353438373832333535"

func TestGenKeyPair(t *testing.T) {
	privateKey, publicKey, e := GenKeyPair()
	if e != nil {
		t.Error(e)
		return
	}
	t.Log("pubKey:", publicKey)
	t.Log("priKey:", privateKey)
}

func TestBuildPublicKey(t *testing.T) {
	publicKey, e := BuildPublicKey(pubKey)
	if e != nil {
		t.Error(e)
		return
	}
	t.Log("publicKey:", publicKey)
}

func TestBuildPrivateKey(t *testing.T) {
	privateKey, e := BuildPrivateKey(priKey)
	if e != nil {
		t.Error(e)
		return
	}
	t.Log("privateKey:", privateKey)
}

func TestSign(t *testing.T) {
	signature, e := Sign(content, priKey)
	if e != nil {
		t.Error(e)
	} else {
		t.Log("signature:", signature)
	}
}

func TestVerifySign(t *testing.T) {
	verify := VerifySign(content, signature, pubKey)
	t.Log("verify:", verify)
}
